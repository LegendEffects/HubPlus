options:
  # Options
  useSB: true
  useServerSelector: true
  noPermission: &8&l(&c&l!&8&l) &cYou do not have permission to do that.
  noAllow: &8&l(&c&l!&8&l) &cYou are not allowed to do that here.

  # Tab / Bossbar / Title
  useTabList: true
  tabHead: &eHey &a%player%&e!
  tabFoot: &7&m------&a&l HubPlus &7&m------

  useBossBar: true
  bossBar: &a&lHubPlus &eRemember to rate on Spigot!

  titleOnJoin: true
  title: &a&lHubPlus
  subtitle: &ePlease rate me on Spigot!
  titleLength: 3 # How long it will appear in seconds

  # Inventory Items
  serverInfo: &aServer Info &7(Right Click)
  serverSelector: &aServer Selector &7(Right Click)
  hidePlayers: &aHide/Show Players &7(Right Click)
  pvpMode: &aPVP Mode &7(Right Click)

  # Hub PvP
  allowHubPVP: true # Enables the Hub PvP feature.
  epearlTimer: 15 # In Seconds
  spawnTag: 30
  repairTimer: 5

  # Server Selector
  selectTitle: &aServer Selector
  selectBorder: true
  selectBorderItem: gray glass

  server1: false # If item is enabled
  s1Item: stone # Item shown in selector
  s1Name: &aFiller # Name shown
  s1Server: example # Server item connects to

  server2: true
  s2Item: diamond
  s2Name: &c&lPrison
  s2Server: prison

  server3: false
  s3Item: stone
  s3Name: &aFiller
  s3Server: example

  server4: true
  s4Item: grass
  s4Name: &c&lSkyblock
  s4Server: skyblock

  server5: false
  s5Item: stone
  s5Name: &aFiller
  s5Server: example

  server6: true
  s6Item: cake item
  s6Name: &c&lCreative
  s6Server: creative

  server7: false
  s7Item: stone
  s7Name: &aFiller
  s7Server: example


  # Info item
  infoTitle: &aServer Information
  infoBorder: true
  infoBorderItem: gray glass

  info1: false # Enable item
  i1Item: stone # Item in GUI
  i1Name: &aFiller # Name of item
  i1Lore: &fFiller Item # Lore on item
  i1Msg: &aThis is a filler # Message when clicked

  info2: true
  i2Item: emerald
  i2Name: &c&lWebsite
  i2Lore: &fwww.example.com
  i2Msg: &aSee our website at: www.example.com

  info3: false
  i3Item: stone
  i3Name: &aFiller
  i3Lore: &fFiller Item
  i3Msg: &aThis is a filler

  info4: true
  i4Item: diamond
  i4Name: &c&lStore
  i4Lore: &fexample.buycraft.net
  i4Msg: &aVisit our store at: example.buycraft.net

  info5: false
  i5Item: stone
  i5Name: &aFiller
  i5Lore: &fFiller Item
  i5Msg: &aThis is a filler

  info6: true
  i6Item: note block
  i6Name: &aTeamspeak
  i6Lore: &fts.example.com
  i6Msg: &aJoin our Teamspeak at: ts.example.com

  info7: false
  i7Item: stone
  i7Name: &aFiller
  i7Lore: &fFiller Item
  i7Msg: &aThis is a filler

  # messages
  prefix: &9Hub &8//&7
  usageMsg: &f[prefix] &7Usage: [command]&7.

  joinMessage: &e[player] has connected.
  leaveMessage: &e[player] has disconnected.

  setArena: [prefix] Arena Set.
  setSpawn: [prefix] Spawn successfully set.
  onUseOfSpawn: [prefix] Teleported.

  flyEnable: [prefix] Flight Enabled.
  flyDisable: [prefix] Flight Disabled.

  playerShow: [prefix] Now showing all players.
  playerHide: [prefix] Now hiding all players.

  enablePvp: [prefix] PVP is now enabled. &aUse /pvp to exit.
  disablePvp: [prefix] PVP is now disabled.
  repairStart: [prefix] Don't get hurt for 5 seconds.
  repairFail: [prefix] Repair Failed.
  spawnTagMsg: [prefix] You are still on spawn tag.

  spacer: &7&m---------------------------
  SBSpacer: &f&m--------------------&8

  pingMsg: [prefix] Your ping is [ping].
  pingOther: [prefix] [player]'s ping is [ping].

  noLastRecieve: [prefix] You havn't got anyone to message back. :(
  ignoredError: [prefix] [player] has you ignored.
  chatclear: [prefix] [player] has cleared the chat.

  vVisable: [prefix] You are now visable.
  vInvisable: [prefix] You are now invisable.
  # Gamemodes
  gmCreativeOther: [prefix] [player] has set your gamemode to Creative.
  gmSurvivalOther: [prefix] [player] has set your gamemode to Survival.
  gmCreativeOR: [prefix] Set [player]'s gamemode to Creative.
  gmSurvivalOR: [prefix] Set [player]'s gamemode to Survival.
  gmCreative: [prefix] Your gamemode has been set to Creative.
  gmSurvival: [prefix] Your gamemode has been set to Survival.

function sMsg(p: player , t: text):
  send {_t} to {_p}

# serverInfo
function serverInfo(p: player):
  open chest with 3 rows named "{@infoTitle}" to {_p}
  wait 1 ticks
  if {@infoBorder} is true:
    set {_count} to 0
    loop 9 times:
      format slot {_count} of {_p} with {@infoBorderItem} named " " to be unstealable
      add 1 to {_count}
    format slot 9 of {_p} with {@infoBorderItem} named " " to be unstealable
    format slot 17 of {_p} with {@infoBorderItem} named " " to be unstealable
    set {_count1} to 18
    loop 9 times:
      format slot {_count1} of {_p} with {@infoBorderItem} named " " to be unstealable
      add 1 to {_count1}

  if {@info1} is true:
    format slot 10 of {_p} with {@i1Item} named "{@i1Name}" with lore "||{@i1Lore}" to close then run [sMsg({_p} , "{@i1Msg}")]
  if {@info2} is true:
    format slot 11 of {_p} with {@i2Item} named "{@i2Name}" with lore "||{@i2Lore}" to close then run [sMsg({_p} , "{@i2Msg}")]
  if {@info3} is true:
    format slot 12 of {_p} with {@i3Item} named "{@i3Name}" with lore "||{@i3Lore}" to close then run [sMsg({_p} , "{@i3Msg}")]
  if {@info4} is true:
    format slot 13 of {_p} with {@i4Item} named "{@i4Name}" with lore "||{@i4Lore}" to close then run [sMsg({_p} , "{@i4Msg}")]
  if {@info5} is true:
    format slot 14 of {_p} with {@i5Item} named "{@i5Name}" with lore "||{@i5Lore}" to close then run [sMsg({_p} , "{@i5Msg}")]
  if {@info6} is true:
    format slot 15 of {_p} with {@i6Item} named "{@i6Name}" with lore "||{@i6Lore}" to close then run [sMsg({_p} , "{@i6Msg}")]
  if {@info7} is true:
    format slot 16 of {_p} with {@i7Item} named "{@i7Name}" with lore "||{@i7Lore}" to close then run [sMsg({_p} , "{@i7Msg}")]

# serverSelector
function serverSelector(p: player):
  if {@useServerSelector} is true:
    open chest with 3 rows named "{@selectTitle}" to {_p}
    wait 1 ticks
    if {@selectBorder} is true:
      set {_count} to 0
      loop 9 times:
        format slot {_count} of {_p} with {@selectBorderItem} named " " to be unstealable
        add 1 to {_count}
      format slot 9 of {_p} with {@selectBorderItem} named " " to be unstealable
      format slot 17 of {_p} with {@selectBorderItem} named " " to be unstealable
      set {_count1} to 18
      loop 9 times:
        format slot {_count1} of {_p} with {@selectBorderItem} named " " to be unstealable
        add 1 to {_count1}

    if {@server1} is true:
      format slot 10 of {_p} with {@s1Item} named "{@s1Name}" to close then run [bungeecord connect {_p} to "{@s1Server}"]
    if {@server2} is true:
      format slot 11 of {_p} with {@s2Item} named "{@s2Name}" to close then run [bungeecord connect {_p} to "{@s2Server}"]
    if {@server3} is true:
      format slot 12 of {_p} with {@s3Item} named "{@s3Name}" to close then run [bungeecord connect {_p} to "{@s3Server}"]
    if {@server4} is true:
      format slot 13 of {_p} with {@s4Item} named "{@s4Name}" to close then run [bungeecord connect {_p} to "{@s4Server}"]
    if {@server5} is true:
      format slot 14 of {_p} with {@s5Item} named "{@s5Name}" to close then run [bungeecord connect {_p} to "{@s5Server}"]
    if {@server6} is true:
      format slot 15 of {_p} with {@s6Item} named "{@s6Name}" to close then run [bungeecord connect {_p} to "{@s6Server}"]
    if {@server7} is true:
      format slot 16 of {_p} with {@s7Item} named "{@s7Name}" to close then run [bungeecord connect {_p} to "{@s7Server}"]

function formatMsg(p: player , v: text , t: number , o: player):
  set {_msg} to {_v}
  replace all "[prefix]" with "{@prefix}" in {_msg}
  replace all "[player]" with "%{_p}%" in {_msg}
  replace all "[ping]" with "%{_p}'s ping%" in {_msg}
  if {_t} is 0:
    set {server::%{_p}%::message} to {_msg}
  else if {_t} is 1:
    send "%{_msg}%" to {_p}
  else if {_t} is 2:
    broadcast "%{_msg}%"
  else if {_t} is 3:
    send "%{_msg}%" to {_o}

function usageMsg(p: player , c: text):
  set {_msg} to "{@usageMsg}"
  replace all "[prefix]" with "{@prefix}" in {_msg}
  replace all "[command]" with "%{_c}%" in {_msg}
  send "%{_msg}%" to {_p}

function sb(p: player):
  set {_uuid} to uuid of {_p}
  if {@useSB} is true:
    if {HubPlus::%{_uuid}%::pvp} is not set:
      wipe {_p} sidebar
      set name of sidebar of {_p} to " "
      set name of sidebar of {_p} to "&a&lHubPlus"
      set score "&8{@SBSpacer}" in sidebar of {_p} to 13
      set score "&a&lPlayer" in sidebar of {_p} to 12
      set score "&f%{_p}%" in sidebar of {_p} to 11
      set score "&l" in sidebar of {_p} to 10
      set score "&b&lPlayers" in sidebar of {_p} to 9
      set score "&e&f%number of players%" in sidebar of {_p} to 8
      set score "&m" in sidebar of {_p} to 7
      set score "&6&lServer" in sidebar of {_p} to 6
      set score "&fHub" in sidebar of {_p} to 5
      set score "&5" in sidebar of {_p} to 4
      set score "&c&lPVP Kills" in sidebar of {_p} to 3
      set score "&f%{HubPlus::%{_uuid}%::pvp::kills}%" in sidebar of {_p} to 2
      set score "&f{@SBSpacer}" in sidebar of {_p} to 1
    else:
      wipe {_p} sidebar
      set name of sidebar of {_p} to " "
      set name of sidebar of {_p} to "&a&lHubPlus &7[PVP Arena]"
      set score "&6{@SBSpacer}" in sidebar of {_p} to 7
      if {HubPlus::%{_uuid}%::cooldowns::timer} is set:
        if {HubPlus::%{_uuid}%::cooldowns::timer} is greater than 9:
          set score "&c&lSpawn Tag&f: &c00&7:&c%{HubPlus::%{_uuid}%::cooldowns::timer}%" in sidebar of {_p} to 6
        else:
          set score "&c&lSpawn Tag&f: &c00&7:&c0%{HubPlus::%{_uuid}%::cooldowns::timer}%" in sidebar of {_p} to 5
      if {HubPlus::%{_uuid}%::cooldowns::repair} is set:
        set score "&5&lRepair&f: &c%{HubPlus::%{_uuid}%::cooldowns::repair}%&cs" in sidebar of {_p} to 4
      if {HubPlus::%{_uuid}%::cooldowns::epearl} is set:
        set score "&e&lEnderpearl&f: &c%{HubPlus::%{_uuid}%::cooldowns::epearl}%&cs" in sidebar of {_p} to 3
      set score "&b&lKills&f: &c%{HubPlus::%{_uuid}%::pvp::kills}%" in sidebar of {_p} to 2
      set score "{@SBSpacer}" in sidebar of {_p} to 1

function formatInv(p: player):
  sb({_p})
  teleport {_p} to {HubPlus::spawn}
  clear {_p}'s inventory
  set slot 0 of {_p} to book named "{@serverInfo}"
  if {@useServerSelector} is true:
    set slot 1 of {_p} to compass named "{@serverSelector}"
  if {@allowHubPVP} is true:
    set slot 7 of {_p} to iron sword named "{@pvpMode}"
  set slot 8 of {_p} to magma cream named "{@hidePlayers}"

function giveKit(p: player):
  clear {_p}'s inventory
  set {_count} to 0
  loop 36 times:
    set slot {_count} of {_p} to Mushroom Stew
    add 1 to {_count}
  set slot 0 of {_p} to iron sword
  set slot 8 of {_p} to 8 ender pearl
  set helmet of {_p} to iron helmet
  set chestplate of {_p} to iron chestplate
  set leggings of {_p} to iron leggings
  set boots of {_p} to iron boots
  sb({_p})

function pvpToggle(p: player):
  wait 1 ticks
  set {_uuid} to uuid of {_p}
  if {HubPlus::%{_uuid}%::pvp} is not set:
    set {HubPlus::%{_uuid}%::pvp} to true
    formatMsg({_p} , "{@enablePvp}" , 1 , {_p})
    giveKit({_p})
    teleport {_p} to {hubPlus::arena}
    if {hubPlus::%{_uuid}%::hide} is set:
      reveal all players from {_p}
      formatMsg({_p} , "{@playerShow}" , 1 , {_p})
  else:
    delete {HubPlus::%{_uuid}%::pvp}
    formatMsg({_p} , "{@disablePvp}" , 1 , {_p})
    formatInv({_p})

command /pvp:
  trigger:
    if {HubPlus::%uuid of player%::pvp} is not set:
      pvpToggle(player)
    else:
      if {HubPlus::%uuid of player%::cooldowns::timer} is not set:
        pvpToggle(player)
      else:
        formatMsg(player , "{@spawnTagMsg}" , 1 , player)

on click with iron sword:
  if name of tool is "{@pvpMode}":
    pvpToggle(player)
on click with book:
  if name of tool is "{@serverInfo}":
    serverInfo(player)
on click with compass:
  if name of tool is "{@serverSelector}":
    serverSelector(player)
on click with magma cream:
  if name of tool is "{@hidePlayers}":
    if {hubPlus::%uuid of player%::hide} is set:
      reveal all players from player
      formatMsg(player , "{@playerShow}" , 1 , player)
      delete {hubPlus::%uuid of player%::hide}
    else:
      hide all players from player
      formatMsg(player , "{@playerHide}" , 1 , player)
      set {hubPlus::%uuid of player%::hide} to true

# Player Commands
command /spawn:
  trigger:
    if {HubPlus::%uuid of player%::pvp} is set:
      if {HubPlus::%uuid of player%::cooldowns::timer} is not set:
        pvpToggle(player)
      else:
        formatMsg(player , "{@spawnTagMsg}" , 1 , player)
    else:
      formatInv(player)
      formatMsg(player , "{@onUseOfSpawn}" , 1 , player)

command /msg [<player>] [<text>]:
  aliases: /m, /pm, /message, /dm
  permission: hubPlus.msg
  permission message: {@noPermission}
  trigger:
    if arg 1 is not set:
      usageMsg(player , "/msg <player> <msg>")
      stop
    if arg 2 is not set:
      usageMsg(player , "/msg <player> <msg>")
      stop
    loop {hubPlus::%uuid of arg 1%::ignore::*}:
      if loop-value is player:
        formatMsg(arg 1, "{@ignoredError}" , 3 , player)
        stop
    send "&7(&cYou &7-> &c%arg 1%&7) %arg 2%"
    send "&7(&c%player%&7 -> &cYou&7) %arg 2%" to arg 1
    set {hubPlus::%uuid of arg 1%::lastrecieve} to player

command /r [<text>]:
  aliases: /respond
  permission: hubPlus.msg
  permission message: {@noPermission}
  trigger:
    if arg 1 is not set:
      usageMsg(player , "/r <msg>")
      stop
    if {hubPlus::%uuid of player%::lastrecieve} is not set:
      formatMsg(player , "{@noLastRecieve}" , 1 , player)
      stop
    make player execute command "/msg %{hubPlus::%uuid of player%::lastrecieve}% %arg 1%"

command /ping [<player>]:
  permission: hubPlus.ping
  permission message: {@noPermission}
  trigger:
    if arg 1 is not set:
      formatMsg(player , "{@pingMsg}" , 1 , player)
    else:
      formatMsg(arg 1 , "{@pingOther}" , 3 , player)
# Staff Commands
command /vanish:
  permission: staff.admin.vanish
  permission message: &9Permissions> &7Sorry but you do not have the permission &c'staff.admin.vanish'&7.
  trigger:
    if {hubPlus::%uuid of player%::vanish} is true:
      delete {hubPlus::%uuid of player%::vanish}
      reveal player to all players
      formatMsg(player , "{@vVisable}" , 1 , player)

    else if {hubPlus::%uuid of player%::vanish} is not set:
      set {hubPlus::%uuid of player%::vanish} to true
      hide player from all players
      formatMsg(player , "{@vInvisable}" , 1 , player)

command /announce [<text>]:
  aliases: /bc, /broadcast
  permission: hubPlus.announce
  permission message: {@noPermission}
  trigger:
    if arg 1 is not set:
      usageMsg(player , "/announce <msg>")
      stop
    broadcast "{@spacer}"
    broadcast "%colored arg 1%"
    broadcast "{@spacer}"

command /clearchat:
  aliases: cc
  permission: hubPlus.clearchat
  permission message: {@noPermission}
  trigger:
    loop 200 times:
      broadcast " "
    formatMsg(player , "{@chatclear}" , 2 , player)

on gamemode change to creative:
  set {hubPlus::%uuid of player%::gm} to 1
on gamemode change to survival:
  delete {hubPlus::%uuid of player%::gm}

command /gm [<player>]:
  permission: hubPlus.gamemode
  permission message: {@noPermission}
  trigger:
    if arg 1 is set:
      if player has the permission "hubPlus.gamemode.other":
        if {hubPlus::%uuid of arg 1%::gm} is not set:
          set the player arg 1's gamemode to creative
          formatMsg(player , "{@gmCreativeOther}" , 3 , arg 1)
          formatMsg(arg 1 , "{@gmCreativeOR}" , 3 , player)
        else:
          formatMsg(player , "{@gmSurvivalOther}" , 3 , arg 1)
          formatMsg(arg 1 , "{@gmSurvivalOR}" , 3 , player)
          set the player arg 1's gamemode to survival
    else:
      if {hubPlus::%uuid of player%::gm} is not set:
        set the player's gamemode to creative
        formatMsg(player , "{@gmCreative}" , 1 , player)
      else:
        set the player's gamemode to survival
        formatMsg(player , "{@gmSurvival}" , 1 , player)

command /fly:
  permission: hubPlus.fly
  permission message: {@noPermission}
  trigger:
    if {hubPlus::%uuid of player%::fly} is set:
      formatMsg(player , "{@flyDisable}" , 1 , player)
      delete {hubPlus::%uuid of player%::fly}
      set player's fly mode to false
    else:
      formatMsg(player , "{@flyEnable}" , 1 , player)
      set {hubPlus::%uuid of player%::fly} to true
      set player's fly mode to true

command /setarena:
  permission: hubPlus.setarena
  permission message: {@noPermission}
  trigger:
    set {hubPlus::arena} to location of player
    formatMsg(player , "{@setArena}" , 1 , player)
command /setspawn:
  permission: hubPlus.setspawn
  permission message: {@noPermission}
  trigger:
    set {hubPlus::spawn} to location of player
    formatMsg(player , "{@setSpawn}" , 1 , player)

# Custom Join / Quit
on join:
  formatMsg(player , "{@joinMessage}" , 0 , player)
  set join message to "%{server::%player%::message}%"
  wait 1 ticks
  teleport player to {hubPlus::spawn}
  formatInv(player)
  sb(player)
  delete {server::%player%::message}
  if {@useBossBar} is true:
    set bossbar named "{@bossBar}" for player to 100
  if {@useTabList} is true:
    set tab header to "{@tabHead}" and footer to "{@tabFoot}" for player
  if {@titleOnJoin} is true:
    send player title "{@title}" with subtitle "{@subtitle}" for {@titleLength} seconds

on quit:
  formatMsg(player , "{@leaveMessage}" , 0 , player)
  set quit message to "%{server::%player%::message}%"
  delete {server::%player%::message}
  delete {hubPlus::%uuid of player%::pvp}
  delete {hubPlus::%uuid of player%::lastrecieve}

# Event Cancel
on hunger meter change:
  set the player's food level to 10
on weather change:
    set weather to sunny
on break:
  if {hubPlus::%uuid of player%::gm} is not set:
    cancel event
    formatMsg(player , "{@noAllow}" , 1 , player)
on place:
  if {hubPlus::%uuid of player%::gm} is not set:
    cancel event
    formatMsg(player , "{@noAllow}" , 1 , player)
on pickup:
  cancel event

# PVP Item
on drop:
  if event-item is not bowl:
    cancel event
    send "&aYou might want to keep that."

on damage:
  if {HubPlus::%uuid of attacker%::pvp} is set:
    if {HubPlus::%uuid of victim%::pvp} is set:
      damage cause is attack:
        set {HubPlus::%uuid of attacker%::cooldowns::repair::break} to true
        set {HubPlus::%uuid of attacker%::cooldowns::timer} to {@spawnTag}
        if {HubPlus::%uuid of attacker%::cooldown::timer::inwhile} is not set:
          while {HubPlus::%uuid of attacker%::cooldowns::timer} is greater than 0:
            set {HubPlus::%uuid of attacker%::cooldown::timer::inwhile} to true
            sb(attacker)
            wait 1 second
            subtract 1 from {HubPlus::%uuid of attacker%::cooldowns::timer}
          delete {HubPlus::%uuid of attacker%::cooldown::timer::inwhile}
          delete {HubPlus::%uuid of attacker%::cooldowns::timer}
        sb(attacker)
    else:
      cancel event
      formatMsg(attacker , "{@noAllow}" , 1 , attacker)
  else:
    cancel event
    formatMsg(attacker , "{@noAllow}" , 1 , attacker)

on damage:
  if {HubPlus::%uuid of attacker%::pvp} is set:
    if {HubPlus::%uuid of victim%::pvp} is set:

      damage cause is attack:
        set {HubPlus::%uuid of victim%::cooldowns::repair::break} to true
        set {HubPlus::%uuid of victim%::cooldowns::timer} to {@spawnTag}
        if {HubPlus::%uuid of victim%::cooldown::timer::inwhile} is not set:
          while {HubPlus::%uuid of victim%::cooldowns::timer} is greater than 0:
            set {HubPlus::%uuid of victim%::cooldown::timer::inwhile} to true
            sb(victim)
            wait 1 second
            subtract 1 from {HubPlus::%uuid of victim%::cooldowns::timer}
          delete {HubPlus::%uuid of victim%::cooldown::timer::inwhile}
          delete {HubPlus::%uuid of victim%::cooldowns::timer}
      sb(victim)

on rightclick with ender pearl:
  if {HubPlus::%uuid of player%::cooldowns::epearl} is greater than 0:
    cancel event
  else:
    set {HubPlus::%uuid of player%::cooldowns::epearl} to {@epearlTimer}
    while {HubPlus::%uuid of player%::cooldowns::epearl} is greater than 0:
      sb(player)
      wait 0.10 second
      subtract 0.10 from {HubPlus::%uuid of player%::cooldowns::epearl}
    delete {HubPlus::%uuid of player%::cooldowns::epearl}
    sb(player)

on click with mushroom stew:
  if {HubPlus::%uuid of player%::pvp} is set:
    if player's health is not equal to player's max health:
      cancel event
      heal the player by 3.5 hearts
      add 10 to player's hunger bar
      set tool to bowl

command /repair:
  trigger:
    set {HubPlus::%uuid of player%::cooldowns::repair} to {@repairTimer}
    formatMsg(player , "{@repairStart}" , 1 , player)
    while {HubPlus::%uuid of player%::cooldowns::repair} is greater than 0:
      if {HubPlus::%uuid of player%::cooldowns::repair::break} is not set:
        sb(player)
        wait 1 second
        subtract 1 from {HubPlus::%uuid of player%::cooldowns::repair}
      else:
        delete {HubPlus::%uuid of player%::cooldowns::repair}
        delete {HubPlus::%uuid of player%::cooldowns::repair::break}
        sb(player)
        formatMsg(player , "{@repairFail}" , 1 , player)
    delete {HubPlus::%uuid of player%::cooldowns::repair}
    delete {HubPlus::%uuid of player%::cooldowns::repair::break}
    sb(player)
    giveKit(player)

on death:
  add 1 to {HubPlus::%uuid of attacker%::pvp::kills}
  clear drops

on respawn:
  pvpToggle(player)
